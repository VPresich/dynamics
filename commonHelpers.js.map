{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorites/favorites-button-remove.js","../src/js/favorites/favorites-not-exercises.js","../src/js/favorites/favorites-exercises-section.js","../src/js/header/menu-buttons-handle-favorites.js","../src/js/header/header-favourites.js"],"sourcesContent":["export default function getRemovButton(rating, url, _id) {\n  return `<div><button data-id=\"${_id}\" class=\"favorites-button-remove\" type=\"button\">\n  <svg data-id=\"${_id}\" class=\"favorites-icon-trash\">\n  <use href=\"${url}#icon-trash-favotites\"></use>\n</svg>\n  </button></div>`;\n}\n","export default function getFavortesNoExercises() {\n  return `<div class=\"favortes-no-exercises\">\n  <div class=\"favortes-no-exercises-found-img\">\n      </div>\n  <p class=\"favortes-no-exercises-found-text\">\n    It appears that you haven't added any exercises to your favorites\n    yet. To get started, you can add exercises that you like to your\n    favorites for easier access in the future.\n  </p>\n</div>`;\n}\n","import exercisesGalleryMarkup from '../exercises-gallery/exercises-gallery-markup';\nimport iconURL from '../../img/icons/symbols.svg';\nimport getRemovButton from './favorites-button-remove';\nimport getFavortesNoExercises from './favorites-not-exercises';\n\nconst favoriteslistExercises = document.querySelector(\n  '.favorites-list-exercises-likes'\n);\n\nconst newArrLocalStorage = [];\n\nif (localStorage.length > 2) {\n  try {\n    newArrLocalStorage.push(JSON.parse(localStorage.getItem('favorites')));\n\n    const newArr = newArrLocalStorage.flatMap(res => res);\n\n    const renderListFavoriteExercises = exercisesGalleryMarkup(\n      newArr,\n      getRemovButton\n    );\n\n    favoriteslistExercises.insertAdjacentHTML(\n      'beforeend',\n      renderListFavoriteExercises\n    );\n\n    favoriteslistExercises.addEventListener('click', event => {\n      const deleteId = event.target.dataset.id;\n\n      if (deleteId) {\n        document\n          .querySelector(`.exercise-card[data-id=\"${deleteId}\"]`)\n          .remove();\n        newArr.map(res => {\n          if (res._id === deleteId) {\n            const csdvs = newArr.indexOf(res);\n\n            newArr.splice(csdvs, 1);\n\n            localStorage.setItem('favorites', JSON.stringify(newArr));\n\n            if (!newArr.length) {\n              localStorage.removeItem('favorites');\n\n              favoriteslistExercises.insertAdjacentHTML(\n                'beforeend',\n                getFavortesNoExercises()\n              );\n            }\n          }\n        });\n      }\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n} else {\n  favoriteslistExercises.insertAdjacentHTML(\n    'beforeend',\n    getFavortesNoExercises()\n  );\n}\n\n// const buttonMenuRef = document.querySelector('.js-open-menu-btn');\n// const mobileMenuRef = document.querySelector('.js-mobile-menu');\n// const buttonCloseMenuRef = document.querySelector('.js-mobile-menu-close-btn');\n\n// buttonMenuRef.addEventListener('click', () => {\n//   mobileMenuRef.classList.add('is-open');\n// });\n\n// buttonCloseMenuRef.addEventListener('click', () => {\n//   mobileMenuRef.classList.remove('is-open');\n// });\n\n// function renderElement(params) {\n//   const render = params.reduce(\n//     (html, { bodyPart, burnedCalories, name, target, _id }) =>\n//       html +\n//       ` <li data-listId=\"${_id}\" class=\"list-exercises-favorites\">\n//             <div class=\"list-exercises-favorites-category\">\n//                 <div>\n//                     <p class=\"exercises-favorites-name-category\">WORKOUT</p>\n//                     <button id=\"${_id}\" class=\"favorites-button-remove\" type=\"button\">\n//                     <svg id=\"${_id}\" class=\"favorites-icon-trash\">\n//                     <use id=\"${_id}\"\n//                         xlink:href=\"./img/icons/symbols.svg#icon-trash-favotites\"\n//                     ></use>\n//                 </svg>\n//                     </button>\n//                 </div>\n\n//                 <button\n//                     type=\"submit\"\n//                     class=\"exercises-favorites-but-start\"\n//                 >\n//                 Start<svg class=\"favorites-icon-arrow\">\n//                 <use\n//                     xlink:href=\"./img/icons/symbols.svg#icon-arrow\"\n//                 ></use>\n//             </svg>\n//                 </button>\n//             </div>\n//             <div class=\"list-exercises-favorites-name\">\n//                 <svg class=\"favorites-social-icon-run\" width=\"24\" height=\"24\">\n//                 <use\n//                 href=\"./img/icons/symbols.svg#favorites=icon-run-exercises\"\n//             ></use>\n//                 </svg>\n//                 <p class=\"exercises-favorites-name\">${name}</p>\n//             </div>\n//             <div class=\"list-exercises-favorites-conteiner\">\n//                 <ul class=\"list-exercises-favorites-characteristic\">\n//                     <li class=\"favorites-list-characteristic\">\n//                         <span class=\"favorites-characteristic-criteria\"\n//                             >Burned calories: </span\n//                         >${burnedCalories} / 3 min\n//                     </li>\n//                     <li class=\"favorites-list-characteristic\">\n//                         <span class=\"favorites-characteristic-criteria\"\n//                             >Body part: </span\n//                         >${bodyPart}\n//                     </li>\n//                     <li class=\"favorites-list-characteristic\">\n//                         <span class=\"favorites-characteristic-criteria\"\n//                             >Target: </span\n//                         >${target}\n//                     </li>\n//                 </ul>\n//             </div>\n//         </li>`,\n//     ''\n//   );\n//   return render;\n// }\n\n// const renderListFavoriteExercises = exercisesGalleryMarkup((filters = [], getRemovButton));\n\n// listExercises.insertAdjacentHTML('beforeend', renderListFavoriteExercises);\n","import { makeActiveAndUsual } from \"./handle-menu-buttons\";\n\nconst homeBtn = document.querySelectorAll('.button-home');\nconst favoritesBtn = document.querySelectorAll('.button-favorites');\n\nmakeActiveAndUsual(favoritesBtn, homeBtn);\n\nfavoritesBtn.forEach(btn => {\n    btn.addEventListener('click', (event) => {\n        makeActiveAndUsual([btn], homeBtn);\n    });\n});","import addHeaderIcons from \"./header-add-icons\";\nimport './mobile-menu-handle';\nimport './menu-buttons-handle-favorites';\n\naddHeaderIcons();\n"],"names":["getRemovButton","rating","url","_id","getFavortesNoExercises","favoriteslistExercises","newArrLocalStorage","newArr","res","renderListFavoriteExercises","exercisesGalleryMarkup","event","deleteId","csdvs","error","homeBtn","favoritesBtn","makeActiveAndUsual","btn","addHeaderIcons"],"mappings":"2EAAe,SAASA,EAAeC,EAAQC,EAAKC,EAAK,CACvD,MAAO,yBAAyBA;AAAA,kBAChBA;AAAA,eACHD;AAAA;AAAA,kBAGf,CCNe,SAASE,GAAyB,CAC/C,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAST,CCLA,MAAMC,EAAyB,SAAS,cACtC,iCACF,EAEMC,EAAqB,CAAA,EAE3B,GAAI,aAAa,OAAS,EACxB,GAAI,CACFA,EAAmB,KAAK,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,CAAC,EAErE,MAAMC,EAASD,EAAmB,QAAQE,GAAOA,CAAG,EAE9CC,EAA8BC,EAClCH,EACAP,CACN,EAEIK,EAAuB,mBACrB,YACAI,CACN,EAEIJ,EAAuB,iBAAiB,QAASM,GAAS,CACxD,MAAMC,EAAWD,EAAM,OAAO,QAAQ,GAElCC,IACF,SACG,cAAc,2BAA2BA,KAAY,EACrD,SACHL,EAAO,IAAIC,GAAO,CAChB,GAAIA,EAAI,MAAQI,EAAU,CACxB,MAAMC,EAAQN,EAAO,QAAQC,CAAG,EAEhCD,EAAO,OAAOM,EAAO,CAAC,EAEtB,aAAa,QAAQ,YAAa,KAAK,UAAUN,CAAM,CAAC,EAEnDA,EAAO,SACV,aAAa,WAAW,WAAW,EAEnCF,EAAuB,mBACrB,YACAD,EAAwB,CACxC,EAEW,CACX,CAAS,EAET,CAAK,CACF,OAAQU,EAAP,CACA,QAAQ,IAAIA,EAAM,OAAO,CAC1B,MAEDT,EAAuB,mBACrB,YACAD,EAAwB,CAC5B,EC3DA,MAAMW,EAAU,SAAS,iBAAiB,cAAc,EAClDC,EAAe,SAAS,iBAAiB,mBAAmB,EAElEC,EAAmBD,EAAcD,CAAO,EAExCC,EAAa,QAAQE,GAAO,CACxBA,EAAI,iBAAiB,QAAUP,GAAU,CACrCM,EAAmB,CAACC,CAAG,EAAGH,CAAO,CACzC,CAAK,CACL,CAAC,ECPDI,EAAgB"}